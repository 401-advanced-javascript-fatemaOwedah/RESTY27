{"version":3,"sources":["components/header/index.js","components/footer/index.js","components/form/form.js","components/if/index.js","components/results/results.js","components/history/history.js","app.js","index.js"],"names":["Header","props","to","activeClassName","Footer","React","Component","localArray","Form","handleSubmit","e","a","preventDefault","toggleLoading","state","url","method","dataBody","body","data","console","log","fetch","mode","cache","credentials","headers","redirect","referrerPolicy","JSON","stringify","response","json","count","results","headerss","forEach","val","key","handler","final","push","localStorage","setItem","raw","alert","handleChangeURL","target","value","setState","handleChangeMethod","id","handleChangeText","onSubmit","this","name","type","onChange","className","onClick","placeholder","render","condition","children","IfRenderer","Children","map","child","cloneElement","Then","Else","Result","Fragment","loading","src","List","parse","getItem","item","i","takeDataFromLocal","App","handleForm","path","exact","handel","Main","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.e274a359.chunk.js","sourcesContent":["import React from 'react';\n\nimport { Link, NavLink } from 'react-router-dom';\n\nconst Header = props => {\n  return (\n      <header>\n          <h1>RESTy</h1>\n          <nav>\n              <ul>\n                  <li>\n                      <Link to=\"/\">Home</Link>\n                  </li>\n                  <li>\n                      <NavLink to=\"/history\" activeClassName=\"history\">History</NavLink>\n                  </li>\n              </ul>\n          </nav>\n      </header>\n  )\n};\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n  render() {\n    return <footer>&copy; 2018 Code Fellows</footer>;\n  }\n}\n\nexport default Footer;","import React from 'react';\n\nimport './form.scss';\n\nlet localArray= [];\nclass Form extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: '',\n      method: 'get'\n    };\n  }\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    this.props.toggleLoading();\n    if(this.state.url &&this.state.method ==='post'){\n      let dataBody = this.state.body.data;\n      console.log('llllllllllllllll',dataBody);\n      let response = await fetch(this.state.url, {\n        method: 'post',\n        mode:'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n        body: JSON.stringify(dataBody),\n      });\n      console.log('kkkkkkkkkkk===',response);\n      let data = await response.json();\n      console.log('data========>', data);\n      let count = data.count;\n      let results = data.results;\n      let headerss = {};\n      response.headers.forEach((val, key) =>{\n        headerss[key] = val;\n      })\n      console.log(headerss);\n      \n\n      this.props.handler( count, headerss, data, results);\n      this.props.toggleLoading();\n      \n      let final = {url:this.state.url, method:this.state.method};\n      localArray.push(final);\n      localStorage.setItem('localArray', JSON.stringify(localArray));\n    }else if(this.state.url &&this.state.method ==='put'){\n        let dataBody = this.state.body.data;\n        console.log('llllllllllllllll',dataBody);\n        let response = await fetch(this.state.url, {\n          method: 'put',\n          mode:'cors',\n          cache: 'no-cache',\n          credentials: 'same-origin',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          redirect: 'follow',\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(dataBody),\n        });\n        console.log('kkkkkkkkkkk===',response);\n        let data = await response.json();\n        console.log('data========>', data);\n        let count = data.count;\n        let results = data.results;\n        let headerss = {};\n        response.headers.forEach((val, key) =>{\n          headerss[key] = val;\n        })\n        console.log(headerss);\n        \n  \n        this.props.handler( count, headerss, data, results);\n        this.props.toggleLoading();\n        \n        let final = {url:this.state.url, method:this.state.method};\n        localArray.push(final);\n        localStorage.setItem('localArray', JSON.stringify(localArray));\n    }else if(this.state.url &&this.state.method ==='delete'){\n      let dataBody = this.state.body.data;\n      console.log('llllllllllllllll',dataBody);\n      let response = await fetch(this.state.url, {\n        method: 'delete',\n        mode:'cors',\n        cache: 'no-cache',\n        credentials: 'same-origin',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        redirect: 'follow',\n        referrerPolicy: 'no-referrer',\n      });\n      console.log('kkkkkkkkkkk===',response);\n      let data = await response.json();\n      console.log('data========>', data);\n      let count = data.count;\n      let results = data.results;\n      let headerss = {};\n      response.headers.forEach((val, key) =>{\n        headerss[key] = val;\n      })\n      console.log(headerss);\n      \n\n      this.props.handler( count, headerss, data, results);\n      this.props.toggleLoading();\n      \n      let final = {url:this.state.url, method:this.state.method};\n      localArray.push(final);\n      localStorage.setItem('localArray', JSON.stringify(localArray));\n  }else if ( this.state.url && this.state.method) {\n\n\n      let raw = await fetch(this.state.url); // star wars API\n      let data = await raw.json();\n\n      let count = data.count;\n      let results = data.results;\n      let headerss = {};\n      raw.headers.forEach((val, key) =>{\n        headerss[key] = val;\n      })\n      console.log(headerss);\n      \n\n      this.props.handler( count, headerss, data, results);\n      this.props.toggleLoading();\n      \n      let final = {url:this.state.url, method:this.state.method};\n      localArray.push(final);\n      localStorage.setItem('localArray', JSON.stringify(localArray));\n\n\n    }else {\n      alert('missing information');\n    }\n  }\n\n  handleChangeURL = e => {\n    const url = e.target.value;\n    this.setState({url});\n  };\n\n  handleChangeMethod = e => {\n    const method = e.target.id;\n    this.setState({ method });\n  };\n\n  handleChangeText = e => {\n    let body = e.target.value;\n    let data = body;\n    this.setState({ body: { data } });\n  }; \n\n  render() {\n    return (\n      <>\n        <form onSubmit={this.handleSubmit}>\n          <label >\n            <span>URL: </span>\n            <input name='url' type='text' onChange={this.handleChangeURL} />\n            <button type=\"submit\">GO!</button>\n          </label>\n          <label className=\"methods\">\n            <span className={this.state.method === 'get' ? 'active' : ''} id=\"get\" onClick={this.handleChangeMethod}>GET</span>\n            <span className={this.state.method === 'post' ? 'active' : ''} id=\"post\" onClick={this.handleChangeMethod}>POST</span>\n            <span className={this.state.method === 'put' ? 'active' : ''} id=\"put\" onClick={this.handleChangeMethod}>PUT</span>\n            <span className={this.state.method === 'delete' ? 'active' : ''} id=\"delete\" onClick={this.handleChangeMethod}>DELETE</span>\n          </label>\n          <textarea placeholder=\"Body\" name=\"requestBody\"  onChange={this.handleChangeText}></textarea>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default Form;","import React from 'react';\n\nconst render = (condition = false , children = null) => {\n    return condition ? children : null;\n};\n\nexport const IfRenderer = props => \n    React.Children.map(props.children, child =>\n        React.cloneElement(child, {condition: props.condition})\n    ); \n\nexport const Then = props => render(props.condition, props.children);\n\nexport const Else = props => render(!props.condition, props.children);\n","import React from 'react';\nimport ReactView from 'react-json-view';\nimport {IfRenderer,Then,Else} from '../if/index';\nimport './results.scss';\n\n\nconst Result = (props) => {\n    return (\n        <React.Fragment>\n        <IfRenderer condition={props.loading}>\n        <Then>\n        <div className={`loading-${props.loading}`}></div>\n        </Then>\n        <Else>\n        <section>\n            <span className=\"count\">{props.count}</span>\n            <div className=\"method\"><ReactView name='Headers' src={props.headerss}/></div>\n            <div className=\"url\"><ReactView name='Response' src={props.results}/></div>\n        </section>\n        </Else>\n        </IfRenderer>\n        \n        </React.Fragment>\n    );\n}\nexport default Result;","import React from 'react';\n\n\nclass List extends React.Component {\n    takeDataFromLocal(){\n        let data = JSON.parse(localStorage.getItem('localArray'));\n        if(data){\n        return data.map((item, i)=> <li key={i}>method: {item.method} URL: {item.url}</li> )\n        }\n    }\n    render() {\n        return (\n            <React.Fragment>\n            <h2>\n                History\n            </h2>\n            <ul>{this.takeDataFromLocal()}</ul>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default List;","import React from 'react';\nimport { Route } from 'react-router-dom';\n\nimport './app.scss';\n\nimport Header from './components/header';\nimport Footer from './components/footer';\nimport Form from './components/form/form.js';\nimport Results from './components/results/results';\nimport History from './components/history/history'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        // key and value pairs\n        count: 0,\n        results: [],\n        loading: false,\n    };\n}\ntoggleLoading = () => {\n  this.setState({ loading: !this.state.loading });\n}\n  // method to be passed to form\n  handleForm = (count, headerss,data, results) => {\n  this.setState({count, headerss,data, results});\n  // {count: count , headers:headers , results:results}\n\n}\n\n  render(){\n    return (\n      <React.Fragment>\n        <Header />\n        <Route path=\"/\" exact>\n          <Form handler={this.handleForm} toggleLoading={this.toggleLoading}/>\n          <Results loading={this.state.loading} count={this.state.count} results={this.state.results}  headerss={this.state.headerss} />\n        </Route>\n        <Route path=\"/history\">\n          <History handel={this.results}/>\n        </Route>\n        <Footer />\n      </React.Fragment>\n    );\n  }\n  \n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport App from './app.js';\n\nclass Main extends React.Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <App/>\n      </BrowserRouter>\n    )\n  }\n}\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<Main />, rootElement);"],"sourceRoot":""}